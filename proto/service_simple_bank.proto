syntax = "proto3";

package service_simple_bank;

// We would want all the generated GO files  to be under the pb package inside the
// pb directory of the project.
option go_package = "github.com/saalikmubeen/backend-masterclass-go/pb;pb";



// For gRPC Gateway to work, we need to import
// the google/api/annotations.proto
// from: https://github.com/googleapis/googleapis/tree/master/google/api
import "google/api/annotations.proto";


// For gRPC Gateway to use the OpenAPIv2 spec proto file to modify and customize the
// OpenAPI spec by adding some annotations to our proto file, so that the protoc can
// automatically generate the desired OpenAPI spec file for us, we need to import
// the protoc-gen-openapiv2/options/annotations.proto
// from: https://github.com/grpc-ecosystem/grpc-gateway/tree/main/protoc-gen-openapiv2/options
// https://github.com/grpc-ecosystem/grpc-gateway/blob/main/examples/internal/proto/examplepb/a_bit_of_everything.proto
import "protoc-gen-openapiv2/options/annotations.proto";



import "create_user.proto";
import "login_user.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Simple Bank API";
		version: "1.2";
		contact: {
			name: "Tech School";
			url: "https://github.com/saalikmubeen/backend-masterclass-go";
			email: "saalikmubeen@gmail.com";
		};
	};
};


service SimpleBankService {

    rpc CreateUser (create_user.CreateUserRequest) returns (create_user.CreateUserResponse) {

      // This is the annotation that tells the gRPC Gateway
      // to map this RPC to a HTTP POST request to /v1/create_user
      // https://github.com/grpc-ecosystem/grpc-gateway
      option (google.api.http) = {
            post: "/v1/create_user"
            body: "*" // parameters of the request will be send in the body.
        };

      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
         description: "Use this API to create a new user";
			   summary: "Create new user";
      };
    }

    rpc LoginUser (login_user.LoginUserRequest) returns (login_user.LoginUserResponse) {

      option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };

      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to login user and get access token & refresh token";
          summary: "Login user";
      };

    }

}


